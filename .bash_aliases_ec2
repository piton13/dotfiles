export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
BASH_THEME="honukai"
# to add colors for status line
export TERM=xterm-256color

stty -ixon # to have possibility search forward in history

# append to the history file, don't overwrite it
# shopt -s histappend
# to update bash history in realtime
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

JMIR='/home/ubuntu/JMIR'

alias mtp='cd $JMIR'

# aws aliases
alias aws_login="okta-aws default sts get-caller-identity"
alias aws_login_keyman="aws_okta_keyman -o dat -u igorm@tcore.com -ro DATDeveloper-Identity"
alias aws_login_keyman_pci="aws_okta_keyman -o dat -u igorm@tcore.com -ro DATDeveloper-PCI"
alias aws_kin_ls="aws kinesis list-streams --profile=dev"
alias adc="aws-dat-cli"

# Networking
alias n_occupied="netstat -anvp tcp | awk 'NR<3 || /LISTEN/'"
alias n_ccoupied2="sudo lsof -PiTCP -sTCP:LISTEN"
alias n_check_ip="dig $site_name"
alias n_consumer="nc -l $port"
alias n_producer="nc 127.0.0.1 $port"

# Docker configs
# export DOCKER_HOST=tcp://127.0.0.1:2375

# usefull aliases for docker-compose commands
dcompose_up () {
	docker-compose -f $1 up
}
dcompose_down () {
	docker-compose -f $1 down
}
# usefull aliases for docker commands
# docker='sudo docker'
docker='docker' # images, containers, networks and volumes
alias d_vulnerability_check='docker scan' # run Snyk to check images for vulnerabilities
alias dcls='$docker ps -a'
alias dclsa='$docker container ls --all'
alias dcl='$docker container logs $container_name'
dc_move() {
	$docker exec -it $1 /bin/bash
}
alias dcp='$docker port $container_name'
alias dc_run='$docker run -d -P --rm --name $container_name $image'
alias dc_create='$docker container create $image_hash'
alias dc_rm='$docker container rm $container_name'
alias dcrma='$docker container prune'
alias dc_stop='$docker stop $container_name'
alias dc_start='$docker start $container_name'
alias dc_inspect="$docker inspect $container_name"
alias dc_inspect_env_vars="$docker inspect $container_name | grep $matchint_name" # $1 - container hash; $2 - matching string
alias dc_logs="$docker logs $container_name"
alias dc_prune_images="docker image prune -a"
alias dc_prune_containers="docker container prune"
alias dc_prune_voulmes="docker volume prune"
alias dc_prune_network="docker network prune"
alias dc_prune_system="docker system prune"
alias di_build='$docker build -t $image .'
alias di_ls='$docker images'
alias di_rm='$docker rmi $image'
alias di_rm_f='$docker rmi -f $image'
alias di_run='$docker run $image $command1 $command2 $command3'
# alias di_run='$docker run $image $command' # docker run iname_hash npm test works well
alias di_search='$docker search $image'
di_get_info() {
	$docker run -it $1 /bin/bash
}
alias dv_ls='$docker volume ls -q'
alias dv_rm='$docker volume rm $volume'
alias dv_rm_all='$docker volume prune' # This will remove all volumes not used by at least one container
alias dn_ls='$docker network ls'
alias dn_rm_all='$docker network prune'

# usefull alias for git commands
# info
alias gil='git log --decorate --oneline'
alias gilm='git log --decorate --oneline --author="Igor Mykhaylyuk" --graph --no-merges'
alias gilac='git shortlog -s -n'
    # add <branch_name> to see commits of specified branch
    # add -<number> to see last <number> commits
    # use --grep="<text>" to see commits with specified text
    # --stat option displays the number of insertions and deletions to each file
    # --aftre="2017-01-13"
    # --until="2017-01-13" - to see commits in specified time range
    # gil -- <file_name> to see commits to specified file or files
    # -S"<text>" to see commit with specified added or removed text
    # gil master..feature to see commits which exist in feature branch but not exist in master
alias gdif='git dif'
alias gs='git status'
# commiting
alias gcia='git cia'
git_cie() {
	git ci --allow-empty -m $1
}
# bisecting
alias gbis='git bisect start'
alias gbib='git bisect bad'
alias gbig='git bisect good'
alias gbir='git bisect reset'
# branch info
alias gba='git branch -a'
alias gbl='git branch -l'
alias gbr='git branch -r'
alias gbm='git branch --merged'
alias gbnm='git branch --no-merged'
# branch operations
alias gmb='git branch -m $(git symbolic-ref HEAD 2> /dev/null | cut -b 12-) $newbranch'
alias gcpd='git co pos_develop'
alias gcld='git co loy_develop'
alias gcob='git co $branch'
alias gcnb='git co -b $branch'
# remote operations
alias gif='git fetch'
alias gift='git fetch --tags'
alias git_tag_add='git tag $1'
alias git_tag_rm='git tag -d $1'
alias git_tag_rm_r='git push --delete origin $1'
alias gt_ls='git tag -l'
alias gifb='git fetch origin $branch'
alias gpr='git pull --rebase origin $(git symbolic-ref HEAD 2> /dev/null | cut -b 12-)'
alias grp='git rp'
alias grpt='git push origin --tags'
alias git_tag_ls_r='git ls-remote --tags origin'
alias grpf='git push -f origin $(git symbolic-ref HEAD 2> /dev/null | cut -b 12-)'
alias grb='git branch -D $branch'
alias grrb='git push origin :$(git symbolic-ref HEAD 2> /dev/null | cut -b 12-)'
alias gruo='git remote update origin --prune'
alias gr_info='git remote -v'
alias gr_add='git remote add origin $1'
alias gr_rm='git remote rm origin'
# rebase
alias grbi='git rbi'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbs='git rebase --skip'
# cherry-pick
alias gcp='git cp'
alias gcpa='git cp --abort'
alias gcpc='git cp --continue'
alias gcpq='git cp --quit'
# reset
alias gci='git clean -dfx' # remove whole ignored files and untracked
alias gcu='git clean -df' # remove whole untracked files
alias grh='git reset --hard HEAD'
alias grl='git reset --hard HEAD~1'
alias grs='git reset --soft HEAD'
alias grst='git reset HEAD $path'
alias git_reset_delited='git checkout HEAD $1'
# stash
alias gst='git stash'
alias gstm='git stash save $message'
alias gsta='git stash apply stash@\{$number\}'
alias gstl='git stash list'
alias gust='git stash pop'
# difference
alias g_diff='git diff $1 $2' # to get diff between 2 different commits
# reset files
git_reset_file() {
  git checkout $1 -- $2 # 1 - branch or commit that file should be reseted to; 2 - path to file
}

# SOME ALIASES FOR NPM
alias ncl='npm config list'
alias ncc='npm cache clean'
alias nci='np && ncc && ni'
alias ni_e='npm install --save --save-exact $1'
alias ni='npm install --no-package-lock'
alias ni_ci='npm ci'
alias npm_init='npm init -y'
# latest minor version of 3.x version => npm i package@"<4.0.0"
alias nif='rm -rf ./node_modules && npm install --no-package-lock'
alias npm_ls='npm list --depth=${1:-0}' # linux command
alias npm_ls_g='npm list -g --depth=${1:-0}' # linux command
alias npm_update='npm install -g npm'
alias np='npm prune'
alias nu='npm update'
alias nr='npm run'
alias ns='npm start'
alias nsbr='npm start -- --log --mock'
alias nd='npm run dev'
alias nt='npm test'
alias nv='npm run validate'
alias nvf='npm run lintfix'
# alias n_cv='npm view $1 versions'
npm_check_version() {
  npm view $1 versions
}
alias n_publish='npm publish'
alias n_unpublish='npm unpublish $1'
# to deprecate some published versions
# npm deprecate @dat/node-oas-api@2.5.1 "Version no longer supported. Upgrade to @2.5.2"
alias nvd='npm version'
# npm version patch # updates patch version and commits changes in git
# npm version minor
# npm version major
# alias nt='node ./run_tests.js'
alias nta='karma start --single-run'
alias npm_ld='npm link' # to link package
# link package by name without version nla @dat/node-oas-api
alias npm_lp='npm link $1' # to use linked package
alias nlls='ls -l node_modules | grep ^l'
alias nrld='npm uninstall'
alias nrla='npm uninstall --no-save some-dependency && ni'

alias "c=clip"
alias "v=clip -o"
